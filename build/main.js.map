{"version":3,"file":"main.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@aduh95/toml/web/toml2js.js","../../src/Input.svelte","../../src/Form.svelte","../../node_modules/@aduh95/format-phone-number/countryCodes.js","../../node_modules/@aduh95/format-phone-number/fetchData.js","../../node_modules/@aduh95/format-phone-number/index.js","../../src/Social.svelte","../../src/Template.svelte","../../src/ClipboardHandler.svelte","../../src/DatabaseInterface.svelte","../../node_modules/@aduh95/toml/web/toml2js_bg.wasm","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {if(ArrayBuffer.isView(arg)){const l=arg.byteLength,p=malloc(l);getUint8Memory0().set(arg,p);WASM_VECTOR_LEN=l;return p} if (realloc ===undefined){const buf=cachedTextEncoder.encode(arg);const ptr=malloc(buf.length);getUint8Memory0().subarray(ptr,ptr+buf.length).set(buf);WASM_VECTOR_LEN=buf.length;return ptr;}let len=arg.length;let ptr=malloc(len);const mem=getUint8Memory0();let offset=0;for (;offset<len;offset++){const code=arg.charCodeAt(offset);if (code>0x7F)break;mem[ptr+offset]=code;}if (offset !==len){if (offset !==0){arg=arg.slice(offset);}ptr=realloc(ptr,len,len=offset+arg.length*3);const view=getUint8Memory0().subarray(ptr+offset,ptr+len);const ret=encodeString(arg,view);offset +=ret.written;}WASM_VECTOR_LEN=offset;return ptr;}                                                                                                                                                      \n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {string} input\n* @returns {any}\n*/\nexport function parse(input) {\n    var ptr0 = passStringToWasm0(input, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse(ptr0, len0);\n    return takeObject(ret);\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} input\n* @returns {string}\n*/\nexport function stringify(input) {\n    try {\n        const retptr = wasm.__wbindgen_export_2.value - 16;\n        wasm.__wbindgen_export_2.value = retptr;\n        wasm.stringify(retptr, addBorrowedObject(input));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_export_2.value += 16;\n        heap[stack_pointer++] = undefined;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = import.meta.url.replace(/\\.js$/, '_bg.wasm');\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        var ret = JSON.stringify(obj === undefined ? null : obj);\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n","<script>\n  import { onMount } from \"svelte\";\n\n  export let name;\n\n  export let autocomplete = \"auto\";\n  export let autofocus = false;\n  export let label = name;\n  export let placeholder = undefined;\n  export let type = \"text\";\n  export let required = false;\n  export let value = \"\";\n\n  let elm;\n\n  if (autofocus) {\n    onMount(() => elm.focus());\n  }\n</script>\n\n{#if type === \"hidden\"}\n  <input {type} {name} {value} />\n{:else}\n  <label>\n    {label}\n    <input\n      {name}\n      {value}\n      {type}\n      {autocomplete}\n      {placeholder}\n      {required}\n      bind:this={elm}\n    />\n  </label>\n{/if}\n","<script lang=\"ts\">\n  import Input from \"./Input.svelte\";\n\n  export let user, onsubmit;\n\n  const { Name, Title, Phone, pictureUrl } = user;\n  const { Facebook, Medium, LinkedIn, Twitter, YouTube } = user.url || {};\n</script>\n\n<form on:submit={onsubmit}>\n  <fieldset>\n    <legend>Personal information</legend>\n    <Input name=\"Name\" value={Name} required={true} autocomplete=\"name\" />\n    <Input\n      name=\"Title\"\n      value={Title}\n      autocomplete=\"organization-title\"\n      autofocus={true}\n      required={true}\n    />\n    <Input\n      name=\"Phone\"\n      value={Phone}\n      type=\"phone\"\n      placeholder=\"International phone number (optional)\"\n    />\n    <Input name=\"pictureUrl\" value={pictureUrl} type=\"hidden\" />\n    <Input\n      name=\"url.Facebook\"\n      value={Facebook}\n      type=\"url\"\n      placeholder=\"Public URL to your Facebook profile (optional)\"\n    />\n    <Input\n      name=\"url.LinkedIn\"\n      value={LinkedIn}\n      type=\"url\"\n      placeholder=\"Public URL to your LinkedIn profile (optional)\"\n    />\n    <Input\n      name=\"url.Medium\"\n      value={Medium}\n      type=\"url\"\n      placeholder=\"Public URL to your Medium profile (optional)\"\n    />\n    <Input\n      name=\"url.Twitter\"\n      value={Twitter}\n      type=\"url\"\n      placeholder=\"Public URL to your Twitter profile (optional)\"\n    />\n    <Input\n      name=\"url.YouTube\"\n      value={YouTube}\n      type=\"url\"\n      placeholder=\"Public URL to your YouTube channel (optional)\"\n    />\n    <button type=\"submit\">Save my information</button>\n  </fieldset>\n</form>\n","export default[376,971,93,355,374,244,54,43,61,297,994,387,880,32,226,359,973,257,229,673,591,55,975,267,375,501,243,236,242,41,225,682,56,237,86,57,506,53,238,599,357,420,49,253,45,213,593,372,20,291,34,251,358,679,691,298,33,241,44,995,594,233,350,299,220,224,590,240,30,502,245,592,852,504,385,509,36,62,353,972,91,246,964,98,354,39,962,81,254,996,855,269,850,82,965,856,961,423,94,231,266,370,352,371,218,212,377,373,382,261,692,389,223,95,976,853,596,222,356,230,960,265,52,60,258,264,687,227,672,234,505,31,47,977,674,683,64,968,507,51,689,675,63,92,48,508,970,351,680,595,974,262,40,381,7,250,966,677,248,249,46,65,386,421,232,378,221,252,597,211,239,503,963,268,235,228,66,992,670,993,216,676,90,688,886,255,380,256,1,598,998,58,84,678,681,685,383,967,27,260,263,800,808,870,878,881,882,883,888,979,];\n","const dataFolder = new URL(\"./data/\", import.meta.url);\n\nexport default (countryCode) =>\n  fetch(new URL(`./${countryCode}.json`, dataFolder)).then((r) =>\n    r.ok ? r.json() : Promise.reject(new Error(r.statusText))\n  );\n","import countryCodes from \"./countryCodes.js\";\nimport getCountryData from \"@aduh95/format-phone-number/getCountryData\";\n\nasync function getInfo(phoneNumber) {\n  const start = phoneNumber[0] === \"+\" ? 1 : 0;\n  for (let i = start; i < phoneNumber.length; i++) {\n    const countryCode = Number(phoneNumber.slice(start, i));\n    if (countryCodes.includes(countryCode)) {\n      return [\n        countryCode,\n        phoneNumber.slice(i),\n        await getCountryData(countryCode),\n      ];\n    }\n  }\n  return Promise.reject(new Error(\"Unable to find valid country code\"));\n}\n\nexport default async function format(phoneNumber) {\n  const [countryCode, national, data] = await getInfo(phoneNumber);\n\n  let formattedNational;\n  for (const { leadingDigits, pattern, format } of data) {\n    if (new RegExp(`^(${leadingDigits})`).test(national)) {\n      const patternRegex = new RegExp(`${pattern}$`);\n      if (patternRegex.test(national)) {\n        formattedNational = national.replace(patternRegex, format);\n        break;\n      }\n    }\n  }\n\n  return `+${countryCode} ${formattedNational || national}`;\n}\n","<script lang=\"ts\">\n  export let links;\n  export let style;\n\n  links.link = \"https://www.e-comas.com/\";\n\n  const providers = Object.entries(links);\n</script>\n\n<div {style}>\n  {#each providers as [name, url]}\n    <a href={url} target=\"_blank\" rel=\"noopener\">\n      <img\n        width=\"26\"\n        alt={name + \" icon\"}\n        style=\"border:0; height:26px; width:26px\"\n        src={`https://e-comas.com/icons/${name.toLowerCase()}.jpg`}\n      /></a\n    >\n  {/each}\n</div>\n","\n  <script lang=\"ts\">\n    import format from \"@aduh95/format-phone-number\";\n\n    import Social from \"./Social.svelte\";\n\n    export let user;\n    export let emailAddress;\n\n    const companyAddress =\n      \"e-Comas Sarl, 68 Avenue de la Liberté, 1930 Luxembourg\";\n\n    const { Name, Title, Phone, pictureUrl } = user;\n    const url = user.url ?? {};\n\n    const decodeImgFromUrl = (url) => {\n      const img = new Image();\n      img.src = url;\n      return img.decode().then(() => img);\n    };\n    const IMG_HEIGHT = 105;\n\n    const data = Promise.all([\n      Phone ? format(Phone) : Promise.resolve(),\n      decodeImgFromUrl(pictureUrl).then(\n        (img) => img.naturalWidth * (IMG_HEIGHT / img.naturalHeight),\n        (e) => {\n          console.error(e);\n          return IMG_HEIGHT;\n        }\n      ),\n    ]);\n  </script>\n{#await data}\n<p>...loading</p>\n{:then [PhoneInternationalFormat, IMG_WIDTH]}\n<table id=\"signature\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 640px; padding: 0; font-family: Arial, Helvetica, sans-serif; -webkit-font-smoothing: antialiased; font-size: 14px; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; border-collapse: separate;\">\n      <tbody>\n        <tr>\n          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n            <table cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: separate;\">\n              <tbody>\n                <tr>\n                  <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n                    <img alt={Name + \"'s picture\"} width={IMG_WIDTH} height={IMG_HEIGHT} src={pictureUrl} style=\"-ms-interpolation-mode: bicubic; max-width: 100%; height: auto; border: none; padding-right: 5px;\">\n                  </td>\n\n                  <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n                    <table cellpadding=\"0\" cellspacing=\"5\" style=\"mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: separate;\">\n                      <tbody>\n                        <tr>\n                          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n                            <strong class=\"name\" style=\"color: #51bf9d;\">{Name}</strong>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n                            <strong style=\"color: #20262b;\">{Title}</strong>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n                            <a href={\"mailto:\" + emailAddress} target=\"_blank\" style=\"color: #20262b; text-decoration: none;\">{emailAddress}</a>\n                          </td>\n                        </tr>\n                        {#if Phone}\n                        <tr>\n                          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n                            <a href={\"tel:\" + Phone} target=\"_blank\" style=\"color: #20262b; text-decoration: none;\">{PhoneInternationalFormat}</a>\n                          </td>\n                        </tr>\n                        {/if}\n                        <tr>\n                          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">{companyAddress}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n        <tr>\n          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\"><Social links={url} style=\"display: flex; gap: 5px;\"></Social></td>\n        </tr>\n        <tr>\n          <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n            <table cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: separate;\">\n              <tbody>\n                <tr>\n                  <td style=\"font-family: Arial, Helvetica, sans-serif; font-size: 14px; vertical-align: top;\">\n                    <a href=\"https://www.e-comas.com/white-paper-form.html\" target=\"_blank\" rel=\"noopener\" style=\"color: #20262b; text-decoration: none;\">\n                      <img alt=\"Logo\" width=\"540\" height=\"90\" src=\"https://www.e-comas.com/docs/signatures/ressources/how-to-manage-amazon.jpg\" style=\"-ms-interpolation-mode: bicubic; max-width: 100%; height: auto; border: none; padding-right: 5px;\"></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n<style>\n#signature { text-align: initial; }\n</style>\n\n{:catch error}\n<p style=\"color: red\">{error}</p>\n{/await}\n","<script lang=\"ts\">\n  const getSignatureHTML = () => document.getElementById(\"signature\").outerHTML;\n\n  function copyHTML(e) {\n    e.preventDefault();\n    navigator.clipboard.write([\n      new ClipboardItem({\n        \"text/html\": new Blob([getSignatureHTML()], { type: \"text/html\" }),\n      }),\n    ]);\n  }\n  function copyPlainHTML(e) {\n    e.preventDefault();\n    navigator.clipboard.writeText(getSignatureHTML());\n  }\n</script>\n\n<button on:click={copyHTML}>Copy signature</button>\n<button on:click={copyPlainHTML}>Copy HTML code</button>\n","<script lang=\"ts\">\n  import * as TOML from \"@aduh95/toml\";\n  // @ts-ignore\n  import tomlParserUrl from \"@aduh95/toml/wasm\";\n  import Form from \"./Form.svelte\";\n  import Preview from \"./Template.svelte\";\n  import ClipboardHandler from \"./ClipboardHandler.svelte\";\n\n  const CDN = \"https://www.e-comas.com/docs/signatures/ressources\";\n  const documentId = \"1YrdCY5heoUS2eLGvU8-YsIspk9ez42glfd-hWRUxo2Q\";\n\n  function* stringifySubTable(subTableName: string, subTable: any) {\n    for (const [key, value] of Object.entries(subTable)) {\n      if (value) {\n        yield `${subTableName}.${TOML.stringify({ [key]: value })}`;\n      }\n    }\n  }\n  function* stringifyUser(email: string, obj: any) {\n    yield \"\";\n    yield \"\";\n\n    const subTables = [];\n    yield TOML.stringify({\n      [email]: Object.fromEntries(\n        Object.entries(obj).filter(([key, value]) => {\n          if (!value) return false;\n          if (typeof value === \"object\" && !Array.isArray(value)) {\n            subTables.push(stringifySubTable(key, value));\n            return false;\n          }\n          return true;\n        })\n      ),\n    }).trimEnd();\n\n    for (const subTable of subTables) {\n      yield* subTable;\n    }\n  }\n\n  const containsDeepChange = (database, obj) =>\n    Object.entries(obj).some(([key, value]) =>\n      typeof value === \"object\"\n        ? containsDeepChange(database[key], value)\n        : database[key] !== value\n    );\n  const getAssociatedValue = (database, key) => {\n    if (key.includes(\".\")) {\n      const [key0, key1] = key.split(\".\", 2);\n      return database[key0][key1];\n    } else {\n      return database[key];\n    }\n  };\n  const getLeftOverEntries = (database, userData, prefix = \"\") =>\n    Object.entries(database).flatMap(([key, value]) =>\n      value && value !== userData[key]\n        ? typeof value === \"string\" || Array.isArray(value)\n          ? { entry: [`${prefix}${key}`, value] }\n          : getLeftOverEntries(value, userData[key], `${key}.`)\n        : []\n    );\n\n  function exploreGDoc(content) {\n    if (!content || typeof content !== \"object\") return;\n\n    if (content.content) return content.content;\n\n    return Object.values(content).map(exploreGDoc).join(\"\\n\");\n  }\n\n  let loadUserData = Promise.all([\n    TOML.default(tomlParserUrl),\n    gapi.client.docs.documents.get({ documentId }),\n    location.hash.includes(\"@\")\n      ? Promise.resolve({ result: { email: location.hash.slice(1) } })\n      : gapi.client.request({ method: \"GET\", path: \"/userinfo/v2/me\" }),\n  ]).then(([_, data, userData]) => [\n    TOML.parse(exploreGDoc(data.result.body.content))[\n      userData.result.email\n    ] ?? {\n      Name: userData.result.name,\n      newUser: true,\n    },\n    userData.result.email,\n  ]);\n\n  window.addEventListener(\"hashchange\", () => {\n    if (location.hash.includes(\"@\")) {\n      const email = location.hash.slice(1);\n      loadUserData = gapi.client.docs.documents\n        .get({ documentId })\n        .then((data) => [\n          TOML.parse(exploreGDoc(data.result.body.content))[email] ?? {\n            newUser: true,\n          },\n          email,\n        ]);\n    }\n  });\n\n  async function onsubmit(this: HTMLFormElement, ev: Event) {\n    ev.preventDefault();\n    const requests = [];\n    const [userData, email] = await loadUserData;\n    const formData = {};\n    for (const [key, value] of new FormData(this).entries()) {\n      if (key.includes(\".\")) {\n        const [key0, key1] = key.split(\".\", 2);\n        formData[key0] ??= {};\n        formData[key0][key1] = value;\n      } else if (key === \"Phone\" && value !== \"\") {\n        formData[key] = \"+\" + /\\D/g[Symbol.replace](value, \"\");\n      } else {\n        formData[key] = value;\n      }\n    }\n    if (userData.newUser) {\n      formData.pictureUrl = `${CDN}/${email.substring(\n        0,\n        email.indexOf(\"@\")\n      )}.jpg`;\n      userData.newUser = false;\n      const text = [...stringifyUser(email, formData)].join(\"\\n\");\n      requests.push({\n        insertText: {\n          text,\n          endOfSegmentLocation: { segmentId: \"\" },\n        },\n      });\n      loadUserData = Promise.resolve([TOML.parse(text)[email], email]);\n    } else if (JSON.stringify(userData) !== JSON.stringify(formData)) {\n      const data = await gapi.client.docs.documents.get({ documentId });\n      const lines = data.result.body.content.flatMap(\n        (p) =>\n          p.paragraph?.elements.map(({ startIndex, endIndex, textRun }) => ({\n            startIndex,\n            endIndex,\n            text: textRun.content,\n          })) ?? []\n      );\n      const tableHeader = /^\\s*\\[\"[^\"]+@[^\"]+\"\\]\\s*$/;\n      const nonEmptyLine = /\\S/;\n\n      let parsingCurrentUser = false;\n      let endOfCurrentUserSectionIndex;\n      for (const { startIndex, endIndex, text } of lines) {\n        if (!nonEmptyLine.test(text)) {\n          // Ignore empty lines.\n        } else if (tableHeader.test(text)) {\n          if (parsingCurrentUser) {\n            // We've reached next user.\n            break;\n          } else if (text.trim() === `[${TOML.stringify(email)}]`) {\n            parsingCurrentUser = true;\n          }\n        } else if (parsingCurrentUser) {\n          endOfCurrentUserSectionIndex = endIndex;\n          if (containsDeepChange(formData, TOML.parse(text))) {\n            const key = text.slice(0, text.indexOf(\"=\")).trim();\n            const value = getAssociatedValue(formData, key);\n            if (value === \"\") {\n              delete userData[key];\n            } else {\n              userData[key] = value;\n            }\n            requests.unshift(\n              {\n                deleteContentRange: {\n                  range: {\n                    segmentId: \"\",\n                    startIndex,\n                    endIndex,\n                  },\n                },\n              },\n              value === \"\"\n                ? undefined\n                : {\n                    insertText: {\n                      location: { index: startIndex, segmentId: \"\" },\n                      text: `${key} = ${TOML.stringify(value)}\\n`,\n                    },\n                  }\n            );\n          }\n        }\n      }\n      for (const {\n        entry: [key, value],\n      } of getLeftOverEntries(formData, userData)) {\n        userData[key] = value;\n        requests.unshift({\n          insertText: {\n            location: {\n              index: endOfCurrentUserSectionIndex,\n              segmentId: \"\",\n            },\n            text: `${key} = ${TOML.stringify(value)}\\n`,\n          },\n        });\n      }\n\n      loadUserData = Promise.resolve([userData, email]);\n    }\n\n    if (requests.length) {\n      await gapi.client.docs.documents.batchUpdate({\n        documentId,\n        requests,\n      });\n    }\n  }\n</script>\n\n{#await loadUserData}\n  <p>...loading</p>\n{:then [userData, email]}\n  <!-- <p style=\"color: red\">{users}</p> -->\n  <Form user={userData} {onsubmit} />\n  {#if !userData.newUser}\n    <hr />\n    <Preview user={userData} emailAddress={email} />\n    <hr />\n    <ClipboardHandler />\n  {/if}\n{:catch error}\n  <p style=\"color: red\">{error}</p>\n{/await}\n","export default \"build/5bb3b01f8af02723.wasm\"","<script lang=\"ts\">\n  import Db from \"./DatabaseInterface.svelte\";\n\n  let connected, connecting;\n  async function subscribe(observer) {\n    for await (const state of observer) {\n      connected = state;\n      connecting = null;\n    }\n  }\n  function cancelConnecting() {\n    connecting = null;\n  }\n  const gAPI = import(\"./gdocs.js\").then((module) => {\n    const observer = module.subscribeToConnectionStatus();\n    const waitForStatus = observer.next();\n\n    subscribe(observer);\n    return waitForStatus.then((state) => {\n      connected = state.value;\n      return () => {\n        connecting = new Promise((resolve, reject) =>\n          (connected ? module.disconnect() : module.connect()).then(\n            resolve,\n            reject\n          )\n        );\n      };\n    });\n  });\n</script>\n\n<main>\n  <h1>Email signature tool</h1>\n  {#await gAPI}\n    <p>...loading</p>\n  {:then toggleConnection}\n    {#if connecting}\n      {#await connecting}\n        <p>...loading</p>\n      {:catch error}\n        <p style=\"color: red\">\n          An error occured: {error.message || error.error || \"Error\"}.\n        </p>\n        <button on:click={toggleConnection}>Try again</button>\n        <button on:click={cancelConnecting}>Cancel</button>\n      {/await}\n    {:else}\n      <p>\n        <button on:click={toggleConnection}>\n          {#if connected}\n            Sign out\n          {:else}\n            Sign in\n          {/if}\n        </button>\n      </p>\n    {/if}\n  {:catch error}\n    <p style=\"color: red\">Unable to connect to Google API.</p>\n  {/await}\n  {#if connected}\n    <Db />\n  {/if}\n</main>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #51bf9d;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n    margin: 0;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n    props: {},\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","wasm","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","handle_promise","promise","info","token","type","index","resolved","child_ctx","undefined","slice","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","update_await_block_branch","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","heap_next","addHeapObject","idx","getObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ArrayBuffer","isView","byteLength","mem","offset","code","charCodeAt","cachegetInt32Memory0","getInt32Memory0","Int32Array","takeObject","dropObject","parse","input","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","stack_pointer","stringify","retptr","__wbindgen_export_2","addBorrowedObject","r0","r1","__wbindgen_free","async","import","meta","url","replace","imports","wbg","__wbindgen_json_parse","arg0","arg1","JSON","__wbindgen_json_serialize","__wbindgen_string_new","__wbindgen_rethrow","Request","URL","fetch","module","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","Instance","load","exports","__wbindgen_wasm_module","elm","autocomplete","autofocus","label","placeholder","required","focus","user","onsubmit","Name","Title","Phone","pictureUrl","Facebook","Medium","LinkedIn","Twitter","YouTube","dataFolder","countryCode","ok","json","reject","statusText","format","phoneNumber","national","start","Number","countryCodes","includes","getCountryData","getInfo","formattedNational","leadingDigits","pattern","RegExp","test","patternRegex","toLowerCase","iterations","links","link","providers","entries","companyAddress","IMG_HEIGHT","_a","emailAddress","all","img","Image","src","decodeImgFromUrl","naturalWidth","naturalHeight","getSignatureHTML","getElementById","outerHTML","preventDefault","navigator","clipboard","write","ClipboardItem","text/html","Blob","writeText","newUser","documentId","exploreGDoc","content","values","join","__awaiter","thisArg","_arguments","P","generator","stringifyUser","email","subTables","TOML.stringify","fromEntries","isArray","subTableName","subTable","stringifySubTable","trimEnd","containsDeepChange","database","some","getAssociatedValue","key0","key1","split","getLeftOverEntries","userData","prefix","flatMap","entry","loadUserData","TOML.default","gapi","client","docs","documents","location","hash","result","request","method","path","_","TOML.parse","body","window","ev","requests","formData","FormData","Symbol","substring","insertText","endOfSegmentLocation","segmentId","lines","_b","paragraph","elements","startIndex","endIndex","textRun","tableHeader","nonEmptyLine","endOfCurrentUserSectionIndex","parsingCurrentUser","trim","unshift","deleteContentRange","range","batchUpdate","message","connected","connecting","gAPI","observer","subscribeToConnectionStatus","waitForStatus","next","observer_1","__asyncValues","observer_1_1","done","state","subscribe","disconnect","connect","app"],"mappings":"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"}