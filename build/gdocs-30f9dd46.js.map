{"version":3,"file":"gdocs-30f9dd46.js","sources":["../../src/gdocs.js"],"sourcesContent":["// Client ID and API key from the Developer Console\nvar CLIENT_ID =\n  \"574901819149-d46caor3hasi3bsngfua2q20idump433.apps.googleusercontent.com\";\nvar API_KEY = \"AIzaSyDIzIuLKqaQhWXSykVOWOQLqlLggFTDOh8\";\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\"https://docs.googleapis.com/$discovery/rest?version=v1\"];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = [\"/auth/documents\", \"/auth/userinfo.email\"]\n  .map((scope) => `https://www.googleapis.com${scope}`)\n  .join(\" \");\n\n/**\n *  On load, called to load the auth2 library and API client library.\n */\nfunction handleClientLoad() {\n  return gapi.load(\"client:auth2\", initClient);\n}\n\n/**\n *  Initializes the API client library and sets up sign-in state\n *  listeners.\n */\nasync function initClient() {\n  await gapi.client.init({\n    apiKey: API_KEY,\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES,\n  });\n  // Listen for sign-in state changes.\n  gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n  // Handle the initial sign-in state.\n  updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n}\n\nlet connectStatusPromise,\n  connectStatus,\n  resolveConnectStatus = Function.prototype;\nfunction updateSigninStatus(isSignedIn) {\n  console.log(\"status\", isSignedIn);\n  connectStatus = isSignedIn;\n  connectStatusPromise = new Promise((resolve) => {\n    resolveConnectStatus(isSignedIn);\n    resolveConnectStatus = resolve;\n  });\n}\nupdateSigninStatus(undefined); // Initialize connection status\nexport async function* subscribeToConnectionStatus() {\n  if (connectStatus !== undefined) yield connectStatus;\n  while (true) {\n    const status = await connectStatusPromise;\n    yield status;\n  }\n}\n\n/**\n *  Sign in the user upon button click.\n */\nexport function connect() {\n  return gapi.auth2.getAuthInstance().signIn();\n}\n\n/**\n *  Sign out the user upon button click.\n */\nexport function disconnect() {\n  return gapi.auth2.getAuthInstance().signOut();\n}\n\nimport \"https://apis.google.com/js/api.js\";\nhandleClientLoad();\n"],"names":[],"mappings":";;;;AAAA;AACA,IAAI,SAAS;AACb,EAAE,0EAA0E,CAAC;AAC7E,IAAI,OAAO,GAAG,yCAAyC,CAAC;AACxD;AACA;AACA,IAAI,cAAc,GAAG,CAAC,wDAAwD,CAAC,CAAC;AAChF;AACA;AACA;AACA,IAAI,MAAM,GAAG,CAAC,iBAAiB,EAAE,sBAAsB,CAAC;AACxD,GAAG,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC,CAAC;AACvD,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACb;AACA;AACA;AACA;AACA,SAAS,gBAAgB,GAAG;AAC5B,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;AAC/C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU,GAAG;AAC5B,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACzB,IAAI,MAAM,EAAE,OAAO;AACnB,IAAI,QAAQ,EAAE,SAAS;AACvB,IAAI,aAAa,EAAE,cAAc;AACjC,IAAI,KAAK,EAAE,MAAM;AACjB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AACrE;AACA;AACA,EAAE,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;AACpE,CAAC;AACD;AACA,IAAI,oBAAoB;AACxB,EAAE,aAAa;AACf,EAAE,oBAAoB,GAAG,QAAQ,CAAC,SAAS,CAAC;AAC5C,SAAS,kBAAkB,CAAC,UAAU,EAAE;AACxC,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AACpC,EAAE,aAAa,GAAG,UAAU,CAAC;AAC7B,EAAE,oBAAoB,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;AAClD,IAAI,oBAAoB,CAAC,UAAU,CAAC,CAAC;AACrC,IAAI,oBAAoB,GAAG,OAAO,CAAC;AACnC,GAAG,CAAC,CAAC;AACL,CAAC;AACD,kBAAkB,CAAC,SAAS,CAAC,CAAC;AACvB,gBAAgB,2BAA2B,GAAG;AACrD,EAAE,IAAI,aAAa,KAAK,SAAS,EAAE,MAAM,aAAa,CAAC;AACvD,EAAE,OAAO,IAAI,EAAE;AACf,IAAI,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC;AAC9C,IAAI,MAAM,MAAM,CAAC;AACjB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACO,SAAS,OAAO,GAAG;AAC1B,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,MAAM,EAAE,CAAC;AAC/C,CAAC;AACD;AACA;AACA;AACA;AACO,SAAS,UAAU,GAAG;AAC7B,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,OAAO,EAAE,CAAC;AAChD,CAAC;AAGD,gBAAgB,EAAE;;;;"}