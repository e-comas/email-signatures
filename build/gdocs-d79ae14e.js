import"https://apis.google.com/js/api.js";var o=["https://docs.googleapis.com/$discovery/rest?version=v1"];async function t(){for(;!("client"in gapi);)await new Promise((o=>setTimeout(o,0)));console.log("client available"),await gapi.client.init({apiKey:"AIzaSyDIzIuLKqaQhWXSykVOWOQLqlLggFTDOh8",clientId:"574901819149-d46caor3hasi3bsngfua2q20idump433.apps.googleusercontent.com",discoveryDocs:o,scope:"https://www.googleapis.com/auth/documents.readonly"}),console.log("client initialized"),gapi.auth2.getAuthInstance().isSignedIn.listen(a),a(gapi.auth2.getAuthInstance().isSignedIn.get())}let e,n,i=Function.prototype;function a(o){console.log("status",o),n=o,e=new Promise((t=>{i(o),i=t}))}async function*s(){for(console.log("subscribe",n),void 0!==n&&(yield n),console.log("yield?",n);;){console.log("await before",n);const o=await e;console.log("await after",n),yield o}}function c(){return console.log("connect"),gapi.auth2.getAuthInstance().signIn()}function l(){return console.log("disconnect"),gapi.auth2.getAuthInstance().signOut()}a(void 0),gapi.load("client:auth2",t);export{c as connect,l as disconnect,s as subscribeToConnectionStatus};
//# sourceMappingURL=gdocs-d79ae14e.js.map
